{"version":3,"sources":["profile.jpg","actions/index.js","components/presentationals/Especialidad.jsx","pages/Home.js","components/containers/Curso.js","components/containers/Ciclo.js","components/containers/Sumillas.js","components/containers/Perfil.js","components/containers/Electivo.js","components/containers/ModalElectivos.js","pages/EspecialidadPage.js","App.js","reducers/perfil.js","data/dataNormalizada.js","reducers/data.js","data/electivosNormalizados.js","reducers/gruposElectivos.js","reducers/modal.js","reducers/index.js","index.js"],"names":["module","exports","arrData","informatica","dataInformatica","industrial","dataIndustrial","arrElectivo","eInformatica","eIndustrial","estoyPermitido","cursosReq","cursosSimultaneos","creditosReq","aprobado","id","dispatch","getState","creditosTotales","getIn","permitido","Number","size","forEach","codigo","cursosRequest","cod","type","payload","aprob","abrirModal","active","Especialidad","direccion","nombre","onSelected","image","seleccionado","selec","onClick","className","style","boxShadow","src","alt","especialidades","Home","state","selecionado","infoCompleted","changeNombre","e","setState","target","value","onBtnClick","preventDefault","props","cambiarNombre","alert","this","to","name","onChange","required","map","esp","key","React","Component","mapDispatchToProps","connect","Curso","handleClick","modificarAprobado","modificarCreditos","requisitos","simultaneo","color","credColor","colorCreditos","background","electivo","creditos","cursos","totalDeCreditos","curso","get","data","totalCreditos","modalIsActive","Ciclo","calcularCreditosPorCiclo","totalCreds","cursoCod","dataCursos","Sumillas","ciclos","ciclo","toList","Perfil","perfilImage","Electivo","colorCred","index","comma","ModalElectivos","isActive","ReactDOM","createPortal","nombreDelGrupo","listaElectivos","document","getElementById","idDelElectivo","nameGroup","EspecialidadPage","buscarDataEspecialidad","match","params","dataNormalizada","schema","Entity","idAttribute","Array","normalize","optenerDataNormalizada","electivosNormalizados","grupoElectivo","gruposElectivos","optenerElectivosNormalizados","App","exact","path","component","initial_state","Map","fromJS","datos","rootReducer","combineReducers","perfil","action","set","setIn","entities","modal","merge","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","render","StrictMode"],"mappings":"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","file":"static/js/main.9cb00c91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.699bef07.jpg\";","import { schema, normalize } from 'normalizr';\r\nimport dataInformatica from '../data/informatica/index.json'\r\nimport dataIndustrial from '../data/industrial/index.json'\r\nimport eInformatica from '../data/informatica/electivos.json'\r\nimport eIndustrial from '../data/industrial/electivos.json'\r\n\r\nconst arrData = {\r\n    informatica: dataInformatica,\r\n    industrial: dataIndustrial\r\n}\r\nconst arrElectivo = {\r\n    informatica: eInformatica,\r\n    industrial: eIndustrial\r\n}\r\n\r\nexport const modificarCreditos = () => (dispatch, getState) => {\r\n    const cursos = getState().getIn([\"data\", \"entities\", \"cursos\"])\r\n    let totalDeCreditos = 0;\r\n    cursos.forEach(curso => {\r\n        if (Number(curso.get('aprobado'))) totalDeCreditos += Number(curso.get('creditos'))\r\n    })\r\n    dispatch({\r\n        type: 'MODIFICAR_CREDITOS',\r\n        payload: totalDeCreditos\r\n    })\r\n} \r\n\r\nexport const modificarAprobado = (permitido, aprobado, id) => (dispatch) => {\r\n    permitido = Number(permitido)\r\n    aprobado = Number(aprobado)\r\n    let aprob = \"0\"\r\n\r\n    if(permitido) aprob = aprobado? \"0\" : \"1\"\r\n    dispatch({\r\n        type: 'MODIFICAR_APROBADO',\r\n        payload: {\r\n            aprob,\r\n            id\r\n        }\r\n    })\r\n}\r\nexport const estoyPermitido = (cursosReq, cursosSimultaneos, creditosReq, aprobado, id) => (dispatch, getState) => {\r\n    const creditosTotales = getState().getIn([\"perfil\", \"totalDeCreditos\"]);\r\n    let permitido = \"1\"\r\n\r\n    if(Number(creditosReq)>creditosTotales || creditosReq===\"\") {\r\n        permitido = \"0\"\r\n    } else {\r\n        if(cursosReq.size!==0) {\r\n            cursosReq.forEach(codigo => {\r\n                const cursoRequeridoAprobado = Number(getState().getIn([\"data\", \"entities\", \"cursos\", codigo, \"aprobado\"]));\r\n                if(!cursoRequeridoAprobado) permitido = \"0\";\r\n            })\r\n        }\r\n        if(cursosSimultaneos.size!==0 && permitido === \"1\") {\r\n            cursosSimultaneos.forEach(codigo => {\r\n                const cursosRequest = getState().getIn([\"data\", \"entities\", \"cursos\", codigo, \"requisitos\"]);\r\n                if(cursosRequest.size!==0) {\r\n                    cursosRequest.forEach(cod => {\r\n                        const cursoReqAprobado = Number(getState().getIn([\"data\", \"entities\", \"cursos\", cod, \"aprobado\"]));\r\n                        if(!cursoReqAprobado) permitido = \"0\";\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    if(aprobado === \"electivo\") {\r\n        dispatch({\r\n            type: 'ELECTIVO_PERMITIDO',\r\n            payload: {\r\n                permitido,\r\n                id\r\n            }\r\n        })\r\n    } else {\r\n        if(permitido === \"0\" && aprobado === \"1\") {\r\n            dispatch({\r\n                type: 'MODIFICAR_APROBADO',\r\n                payload: {\r\n                    aprob: \"0\",\r\n                    id\r\n                }\r\n            })\r\n        }\r\n        dispatch({\r\n            type: 'MODIFICAR_PERMITIDO',\r\n            payload: {\r\n                permitido,\r\n                id\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\nexport const abrirModal = (active, id) => (dispatch) => {\r\n    // if(id===\"\")\r\n    //     id= getState().getIn([\"modal\", \"idDelElectivo\"]);\r\n    dispatch({\r\n        type: 'ACTIVE_MODAL',\r\n        payload: {\r\n            active,\r\n            id\r\n        }\r\n    })\r\n}\r\n\r\n// export const modificarValoresElectivo = (idElectivo) => (dispatch, getState) => {\r\n//     const dataElectivo = getState().getIn([\"gruposElectivos\", \"entities\", \"electivos\", idElectivo]);\r\n//     const nombre = dataElectivo.get('nombre');\r\n//     const creditos = dataElectivo.get('creditos');\r\n//     const creditosReq = dataElectivo.get('creditosReq');\r\n//     const requisitos = dataElectivo.get('requisitos');\r\n//     const simultaneo = dataElectivo.get('simultaneo');\r\n//     const idPadre = getState().getIn([\"modal\", \"idDelElectivo\"]);\r\n//     const nuevosDatos = {\r\n//         nombre,\r\n//         creditos,\r\n//         creditosReq,\r\n//         requisitos,\r\n//         simultaneo\r\n//     }\r\n//     dispatch({\r\n//         type: 'MODIFICAR_VALORES_ELECTIVO',\r\n//         payload: {\r\n//             id: idPadre,\r\n//             nuevosDatos\r\n//         }\r\n//     })\r\n// }\r\n\r\nexport const cambiarNombre = (nombre) => dispatch => {\r\n    dispatch({\r\n        type: 'CAMBIAR_NOMBRE',\r\n        payload: nombre\r\n    })\r\n}\r\n\r\nexport const buscarDataEspecialidad = esp => dispatch => {\r\n    const data = arrData[esp]\r\n    const electivo = arrElectivo[esp]\r\n    const dataNormalizada = optenerDataNormalizada(data)\r\n    const electivosNormalizados = optenerElectivosNormalizados(electivo)\r\n    dispatch({\r\n        type: 'DATA',\r\n        payload: dataNormalizada\r\n    })\r\n    dispatch({\r\n        type: 'ELECTIVOS',\r\n        payload: electivosNormalizados\r\n    })\r\n}\r\n\r\nfunction optenerDataNormalizada (data) {\r\n    const curso = new schema.Entity(\"cursos\", {}, {\r\n        idAttribute: 'codigo',\r\n    });\r\n    const ciclo = new schema.Entity(\"ciclos\", {cursos: new schema.Array(curso)})\r\n    const ciclos = {ciclos: new schema.Array(ciclo)}\r\n    \r\n    const dataNormalizada = normalize(data, ciclos)\r\n    return dataNormalizada\r\n}\r\nfunction optenerElectivosNormalizados (data) {\r\n    const electivo = new schema.Entity(\"electivos\", {}, {\r\n        idAttribute: 'codigo',\r\n    });\r\n    const grupoElectivo = new schema.Entity(\"gruposElectivos\", {cursos: new schema.Array(electivo)}, {\r\n        idAttribute: 'grupoElectivo',\r\n    })\r\n    const gruposElectivos = {gruposElectivos: new schema.Array(grupoElectivo)}\r\n    \r\n    const electivosNormalizados = normalize(data, gruposElectivos)\r\n    return electivosNormalizados\r\n}","import React from 'react'\r\n\r\nfunction Especialidad ({direccion, nombre, onSelected, image, seleccionado}) {\r\n    let selec = ''\r\n    if(direccion === seleccionado) selec = '0px 0px 18px 1px'\r\n    return (\r\n        <div onClick={()=> onSelected(direccion)} className=\"Especialidad\" style={{boxShadow: selec}}>\r\n            <strong>{nombre}</strong>\r\n            <img src={image} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Especialidad","import React from 'react';\r\nimport { cambiarNombre } from '../actions'\r\nimport Especialidad from '../components/presentationals/Especialidad'\r\nimport { connect } from 'react-redux'\r\nimport '../components/css/home.css'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst especialidades = [\r\n    {\r\n        id: \"1\",\r\n        nombre: \"Informática\",\r\n        direccion: \"informatica\",\r\n        image: \"https://images.vexels.com/media/users/3/157318/isolated/preview/2782b0b66efa5815b12c9c637322aff3-icono-de-la-computadora-de-escritorio-by-vexels.png\"\r\n    }, \r\n    {\r\n        id: \"2\",\r\n        nombre: \"Industrial\",\r\n        direccion: \"industrial\",\r\n        image: \"https://thumbs.dreamstime.com/t/icono-del-ingeniero-industrial-131154079.jpg\"\r\n    }\r\n]\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        selecionado: '',\r\n        nombre: '',\r\n        infoCompleted: false\r\n    }\r\n    changeNombre = e => {\r\n        this.setState({\r\n            nombre: e.target.value\r\n        })\r\n    }\r\n    onSelected = value => {\r\n        this.setState({\r\n            selecionado: value\r\n        })\r\n    }\r\n    onBtnClick = e => {\r\n        e.preventDefault()\r\n        if(this.state.nombre && this.state.selecionado) {\r\n            this.props.cambiarNombre(this.state.nombre)\r\n            this.setState({infoCompleted: true})\r\n        } else {\r\n            alert(\"Es necesario elegir un Nombre y una Especialidad\")\r\n        }\r\n    }\r\n    render() {\r\n        if(this.state.infoCompleted) return <Redirect to={`/${this.state.selecionado}`}/>\r\n        return (\r\n            <div className=\"Home\">\r\n                <form className=\"Home_form\">\r\n                    <h1>Wellcome!</h1>\r\n                    <div className=\"Home_Fgroup\">\r\n                        <label>Nombre: </label>\r\n                        <input type=\"text\" name=\"nombre\" className=\"Home_inputText\" onChange={this.changeNombre} value={this.state.nombre} required/>\r\n                    </div>\r\n                    <div className=\"Home_Fgroup\">\r\n                        <label>Especialidad: </label>\r\n                        <div className=\"Home_especialidades\">\r\n                            {\r\n                                especialidades.map(esp => <Especialidad {...esp} seleccionado={this.state.selecionado} onSelected={this.onSelected} key={esp.id}/>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <button onClick={this.onBtnClick} className=\"Home_btn\">Consultar</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  cambiarNombre\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Home);","import React from 'react'\r\nimport '../css/curso.css'\r\nimport { connect } from 'react-redux'\r\nimport { modificarCreditos, modificarAprobado, estoyPermitido, abrirModal } from '../../actions'\r\n\r\nfunction retornarColor(permitido, aprobado) {\r\n    permitido = Number(permitido)\r\n    aprobado = Number(aprobado)\r\n    if(permitido && aprobado) return \"#00DD7D\"; // green\r\n    else if(permitido && !aprobado) return \"#40A1ED\"; // blue\r\n    else return \"#ED4040\"; // red\r\n}\r\nfunction colorCreditos(color) {\r\n    switch(color) {\r\n        case \"#00DD7D\":\r\n            return \"#22C022\";\r\n        case \"#40A1ED\":\r\n            return \"#1D24D2\";\r\n        default:\r\n            return \"#FD2A2A\";\r\n    }\r\n}\r\n\r\nclass Curso extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.modificarAprobado(this.props.permitido, this.props.aprobado, this.props.id)\r\n        this.props.modificarCreditos()\r\n    }\r\n    render() {\r\n        this.props.estoyPermitido(this.props.requisitos, this.props.simultaneo, this.props.creditosReq, this.props.aprobado, this.props.id)\r\n        const color = retornarColor(this.props.permitido, this.props.aprobado)\r\n        const credColor = colorCreditos(color)\r\n        return (\r\n            <div className=\"Curso\" >\r\n                <div className=\"Curso_datos\" style={{background: `${color}`}} onClick={this.handleClick}>\r\n                    {\r\n                        (Number(this.props.electivo)===0) && <h5>{this.props.codigo}</h5>\r\n                    }\r\n                    <h4>{this.props.nombre}</h4>\r\n                    <h5>{this.props.creditos}</h5>\r\n                {\r\n                    (Number(this.props.creditosReq)!==0) && \r\n                    <div className=\"Curso_credReq\" style={{background: `${credColor}`}}><strong>{this.props.creditosReq}</strong> cdts.</div>\r\n                }\r\n                </div>\r\n                {\r\n                    (Number(this.props.electivo)!==0) && \r\n                    <div className=\"Curso_esElectivo_E\" \r\n                        style={{'border': `4px solid ${credColor}`}} \r\n                        onClick={()=>this.props.abrirModal(true, this.props.id)}> E </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps (state, props) {\r\n    const data = state.getIn([\"data\", \"entities\", \"cursos\", props.id])\r\n    const totalCreditos = state.getIn([\"perfil\", \"totalDeCreditos\"])\r\n    return  {\r\n        codigo: data.get('codigo'),\r\n        nombre: data.get('nombre'),\r\n        creditos: data.get('creditos'),\r\n        creditosReq: data.get('creditosReq'),\r\n        aprobado: data.get('aprobado'),\r\n        permitido: data.get('permitido'),\r\n        requisitos: data.get('requisitos'),\r\n        simultaneo: data.get('simultaneo'),\r\n        electivo: data.get('electivo'),\r\n        modalIsActive: state.getIn([\"modal\", \"isActive\"]),\r\n        totalCreditos\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    modificarCreditos,\r\n    modificarAprobado,\r\n    estoyPermitido,\r\n    abrirModal\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Curso);","import React from 'react'\r\nimport Curso from './Curso'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Ciclo extends React.Component {\r\n    \r\n    calcularCreditosPorCiclo = () => {\r\n        let totalCreds = 0;\r\n        this.props.cursos.forEach(cursoCod => {\r\n            const curso = this.props.dataCursos.get(cursoCod)\r\n            if(Number(curso.get(\"aprobado\"))) totalCreds += Number(curso.get(\"creditos\"));\r\n        });\r\n        return totalCreds;\r\n    }\r\n\r\n    render() {\r\n        const totalCreds = this.calcularCreditosPorCiclo()\r\n        return (\r\n            <div>\r\n                <h2>Ciclo {this.props.id}</h2>\r\n                <h3>{totalCreds}</h3>\r\n                {\r\n                    this.props.cursos.map(curso => <Curso key={curso} id={curso}/>)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state, props) {\r\n    return  {\r\n        cursos: state.getIn([\"data\", \"entities\", \"ciclos\", props.id, \"cursos\"]),\r\n        dataCursos: state.getIn([\"data\", \"entities\", \"cursos\"]),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Ciclo);","import React from 'react'\r\nimport Ciclo from './Ciclo'\r\nimport { connect } from 'react-redux'\r\nimport '../css/sumillas.css'\r\n\r\nclass Sumillas extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Sumillas\">\r\n                {\r\n                    this.props.ciclos.map(ciclo => <Ciclo key={ciclo.get('id')} id={ciclo.get('id')}/>)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return  {\r\n        ciclos: state.getIn([\"data\", \"entities\", \"ciclos\"]).toList(),\r\n        cursos: state.getIn(['data', 'entities', \"cursos\"]).toList(),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sumillas);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport perfilImage from '../../profile.jpg'\r\nimport '../css/perfil.css'\r\n\r\nclass Perfil extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Perfil\">\r\n                <img src={perfilImage} alt=\"profile.jpg\" className=\"Perfil_img\"/>\r\n                <div className=\"Perfil_datos\">\r\n                    <h1>{this.props.nombre}</h1>\r\n                    <h2>Creditos totales: {this.props.creditos}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return  {\r\n        creditos: state.getIn([\"perfil\", \"totalDeCreditos\"]),\r\n        nombre: state.getIn([\"perfil\", \"nombre\"])\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Perfil);","import React from 'react'\r\nimport '../css/electivo.css'\r\nimport { connect } from 'react-redux'\r\nimport { estoyPermitido, abrirModal } from '../../actions'\r\n// import { estoyPermitido, modificarValoresElectivo, abrirModal } from '../../actions'\r\n\r\nfunction colorCreditos(color) {\r\n    switch(color) {\r\n        case \"#ED4040\":\r\n            return \"#FD2A2A\";\r\n        case \"#40A1ED\":\r\n            return \"#1D24D2\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nclass Electivo extends React.Component {\r\n    handleClick = () => {\r\n        // this.props.modificarValoresElectivo(this.props.id)\r\n        this.props.abrirModal(false,\"\")\r\n    }\r\n\r\n    render() {\r\n        this.props.estoyPermitido(this.props.requisitos, this.props.simultaneo, this.props.creditosReq, \"electivo\", this.props.id)\r\n        const color = (Number(this.props.permitido)===1)? \"#40A1ED\" : \"#ED4040\";\r\n        const colorCred = colorCreditos(color)\r\n        return (\r\n            <div className=\"Electivo\" onClick={this.handleClick} style={{background: `${color}`}}>\r\n                    <h5>{this.props.codigo}</h5>\r\n                    <h4>{this.props.nombre}</h4>\r\n                    <h5>{this.props.creditos}</h5>\r\n                    <div className=\"Electivo_credReq\" style={{background: colorCred}}>\r\n                            { (Number(this.props.requisitos.size)!==0) && this.props.requisitos.map((codigo, index) => {\r\n                                const comma = (index<this.props.requisitos.size-1)? ', ' : ' ';\r\n                                return `${codigo}${comma} `;\r\n                            })\r\n                        }\r\n                            { (Number(this.props.simultaneo.size)!==0) && this.props.simultaneo.map((codigo, index) => {\r\n                                const comma = (index<this.props.simultaneo.size-1)? ', ' : '';\r\n                                return `[${codigo}]${comma}`;\r\n                            })\r\n                        }\r\n                        { (Number(this.props.creditosReq)!==0) && this.props.creditosReq + \"cdts.\"}\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps (state, props) {\r\n    const data = state.getIn([\"gruposElectivos\", \"entities\", \"electivos\", props.id])\r\n    return  {\r\n        codigo: data.get('codigo'),\r\n        nombre: data.get('nombre'),\r\n        creditos: data.get('creditos'),\r\n        creditosReq: data.get('creditosReq'),\r\n        requisitos: data.get('requisitos'),\r\n        simultaneo: data.get('simultaneo'),\r\n        permitido: data.get('permitido')\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    estoyPermitido,\r\n    // modificarValoresElectivo,\r\n    abrirModal\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Electivo);","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport '../css/modal.css'\r\nimport { connect } from 'react-redux'\r\nimport { abrirModal } from '../../actions'\r\nimport Electivo from './Electivo'\r\n\r\n\r\nclass ModalElectivos extends React.Component {\r\n    render() {\r\n        if(this.props.isActive) {\r\n            return ReactDOM.createPortal(\r\n                <div className=\"ModalElectivos_container\">\r\n                    <div className=\"ModalElectivos\">\r\n                        <div onClick={()=>this.props.abrirModal(false,\"\")} className=\"Modal_Xbutton\">X</div>\r\n                        <h2>{this.props.nombreDelGrupo}</h2>\r\n                        <div className=\"ModalElectivos_AlmacenContainer\">\r\n                            <div className=\"ModalElectivos_Almacen\">\r\n                                {\r\n                                    this.props.listaElectivos.map(codigo => <Electivo key={codigo} id={codigo}/>)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>,\r\n            document.getElementById('modal'));\r\n        } else return null;\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps (state) {\r\n    const idDelElectivo = state.getIn([\"modal\", \"idDelElectivo\"])\r\n    const nameGroup = state.getIn([\"data\", \"entities\", \"cursos\", idDelElectivo, \"nombre\"])\r\n    // console.log(nameGroup, idDelElectivo)\r\n    // console.log(state.getIn([\"data\", \"entities\", \"cursos\", idDelElectivo]))\r\n\r\n    return  {\r\n        isActive: state.getIn([\"modal\", \"isActive\"]),\r\n        listaElectivos: state.getIn([\"gruposElectivos\", \"entities\", \"gruposElectivos\", nameGroup, \"cursos\"]),\r\n        nombreDelGrupo: nameGroup\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    abrirModal\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalElectivos);\r\n// export default ModalElectivos;","import React from 'react';\r\nimport Sumillas from '../components/containers/Sumillas'\r\nimport Perfil from '../components/containers/Perfil'\r\nimport ModalElectivos from '../components/containers/ModalElectivos'\r\nimport { buscarDataEspecialidad } from '../actions'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass EspecialidadPage extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.props.buscarDataEspecialidad(this.props.match.params.esp)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Perfil />\r\n                <Sumillas />\r\n                <ModalElectivos />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    buscarDataEspecialidad\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(EspecialidadPage);","import React from 'react';\nimport Home from './pages/Home'\nimport EspecialidadPage from './pages/EspecialidadPage'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nfunction App () {\n  // const hombrePerfil = prompt(\"¿Cuál es tu nombre?\", \"Usuario\");\n  // props.cambiarNombre(hombrePerfil)\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/:esp\" component={EspecialidadPage} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { Map } from 'immutable';\r\n\r\nconst initial_state = Map({\r\n    totalDeCreditos: 0,\r\n    nombre: \"Usuario\"\r\n})\r\n\r\nexport default function Perfil (state = initial_state, action) {\r\n    switch(action.type) {\r\n        case 'MODIFICAR_CREDITOS':\r\n            return state.set('totalDeCreditos', action.payload);\r\n        case 'CAMBIAR_NOMBRE':\r\n            return state.set('nombre', action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { schema, normalize } from 'normalizr';\r\nimport data from './industrial/index.json'\r\n\r\nconst curso = new schema.Entity(\"cursos\", {}, {\r\n    idAttribute: 'codigo',\r\n});\r\nconst ciclo = new schema.Entity(\"ciclos\", {cursos: new schema.Array(curso)})\r\nconst ciclos = {ciclos: new schema.Array(ciclo)}\r\n\r\nconst dataNormalizada = normalize(data, ciclos)\r\n\r\n// console.log('dataNormalizada', dataNormalizada)\r\n\r\nexport default dataNormalizada;","import { fromJS } from 'immutable';\r\nimport datos from '../data/dataNormalizada'\r\n\r\nconst initial_state = fromJS({\r\n    ...datos\r\n})\r\n\r\nexport default function data (state = initial_state, action) {\r\n    switch(action.type) {\r\n        case 'MODIFICAR_PERMITIDO':\r\n            return state.setIn(['entities', 'cursos', action.payload.id, 'permitido'], action.payload.permitido)\r\n        case 'MODIFICAR_APROBADO':\r\n            return state.setIn(['entities', 'cursos', action.payload.id, 'aprobado'], action.payload.aprob)\r\n        case 'DATA':\r\n            const data = action.payload\r\n            return state.set('entities', fromJS(data.entities))\r\n        // case 'MODIFICAR_VALORES_ELECTIVO':\r\n        //     const {nombre, creditos, creditosReq, requisitos, simultaneo } = action.payload.nuevosDatos\r\n\r\n        //     return state.mergeIn(['entities', 'cursos', action.payload.id], {nombre, creditos, creditosReq, requisitos, simultaneo})\r\n        default:\r\n            return state;\r\n    }\r\n}","import { schema, normalize } from 'normalizr';\r\nimport data from './industrial/electivos.json'\r\n\r\nconst electivo = new schema.Entity(\"electivos\", {}, {\r\n    idAttribute: 'codigo',\r\n});\r\nconst grupoElectivo = new schema.Entity(\"gruposElectivos\", {cursos: new schema.Array(electivo)}, {\r\n    idAttribute: 'grupoElectivo',\r\n})\r\nconst gruposElectivos = {gruposElectivos: new schema.Array(grupoElectivo)}\r\n\r\n\r\nconst electivosNormalizados = normalize(data, gruposElectivos)\r\n\r\n// console.log('electivosNormalizados', electivosNormalizados)\r\n\r\nexport default electivosNormalizados;","import { fromJS } from 'immutable';\r\nimport datos from '../data/electivosNormalizados'\r\n\r\nconst initial_state = fromJS({\r\n    ...datos\r\n})\r\n\r\nexport default function gruposElectivos (state = initial_state, action) {\r\n    switch(action.type) {\r\n        case 'ELECTIVO_PERMITIDO':\r\n            return state.setIn(['entities', 'electivos', action.payload.id, 'permitido'], action.payload.permitido)\r\n        case 'ELECTIVOS':\r\n            const data = action.payload\r\n            return state.set('entities', fromJS(data.entities))\r\n        default:\r\n            return state;\r\n    }\r\n}","import { fromJS } from 'immutable';\r\n\r\nconst initial_state = fromJS({\r\n    isActive: false,\r\n    idDelElectivo: \"\"\r\n})\r\n\r\nexport default function data (state = initial_state, action) {\r\n    switch(action.type) {\r\n        case 'ACTIVE_MODAL':\r\n            return state.merge({isActive: action.payload.active, idDelElectivo:  action.payload.id});\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux-immutable';\r\nimport perfil from './perfil';\r\nimport data from './data';\r\nimport gruposElectivos from './gruposElectivos';\r\nimport modal from './modal';\r\n\r\nconst rootReducer = combineReducers({\r\n    perfil,\r\n    data,\r\n    gruposElectivos,\r\n    modal\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ModalElectivos from './components/containers/ModalElectivos';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducers';\nimport { Map } from 'immutable';\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nconst store = createStore( reducer,\n   Map(), \n   composeWithDevTools(applyMiddleware(thunk)) )\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nReactDOM.createPortal(\n    <ModalElectivos />,\n  document.getElementById('modal'))\n"],"sourceRoot":""}